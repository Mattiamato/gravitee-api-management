version: 2.1
orbs:
    slack: circleci/slack@4.8.1
    snyk: snyk/snyk@1.1.2
commands:  
    docker-scan:
      steps:
          - snyk/scan:
              organization: gravitee.io
              monitor-on-build: false
              severity-threshold: critical
              docker-image-name: ${IMAGE_TAG}
              fail-on-issues: false  
              additional-arguments: --app-vulns
    notify-snyk-result: 
          parameters:
            notify:
              type: string
              default: "false"
          steps:
            - when:
                condition:
                     equal: ["true", << parameters.notify >>]
                steps:        
                  - run:
                      command: echo "test"

jobs:       
    publish_prod_docker_images: 
        docker:
            - image: cimg/openjdk:17.0.1    
        steps:
            - run:
                name: snyk scan 1
                command: |  
                  IMAGE_TAG=graviteeio/am-management-api:3.10-ee 
                  echo "export IMAGE_TAG='${IMAGE_TAG}'" >> $BASH_ENV  
            - docker-scan
            - run:
                #when: always
                name: Generate last log lines for slack message
                command: |
                   API_URL=$(echo $CIRCLE_BUILD_URL | cut -d/ -f4-7)
                   FAILED_STEP=$(curl "https://circleci.com/api/v1.1/project/${API_URL}?circle-token=${CIRCLE_API_TOKEN}" | jq '.steps | .[] | flatten | map(select(.name? == "Run Snyk")) | .[] | {allocation_id, step}')
                   ALLOCATION_ID=$(echo "${FAILED_STEP}" | jq -r '.allocation_id')
                   STEP=$(echo "${FAILED_STEP}" | jq -r '.step')
                   curl -o slack_response.txt "https://circleci.com/api/v1.1/project/${API_URL}/output/${STEP}/0?file=true&allocation-id=${ALLOCATION_ID}&circle-token=$CIRCLE_API_TOKEN"
                   sed -i 's/\r$//g' slack_response.txt
                   SLACK_MESSAGE=$(cat slack_response.txt | tail -n 5 | sed '$!s/$/\\n/' | tr -d '\n')
                   SLACK_MESSAGE1=true
                   echo "export SLACK_MESSAGE='${SLACK_MESSAGE}'" >> $BASH_ENV
                   #if [ "${SLACK_MESSAGE1}" == "test" ]
                   #then
                   #notify=true
                   #else
                   #notify=false
                   #fi
            - notify-snyk-result:
                  notify: $SLACK_MESSAGE1
                   
            #- when: 
            #      condition:
            #          equal: [true, << parameters.notify >>]
            #      steps:
            #          - notify-snyk-result

                      
workflows:
    pull_requests:
        jobs:
            - publish_prod_docker_images
            

           
