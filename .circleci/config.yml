version: 2.1
orbs:
    snyk: snyk/snyk@1.1.2
commands:
    docker-scan:
        parameters:
            docker-image-name:
                type: string
                default: ""
                description: The name of the docker image to scan (without the version)
            version:
                  type: string
                  default: ""
                  description: Version of the docker image to scan    
        steps:
            - snyk/scan:
                organization: gravitee.io
                monitor-on-build: true
                severity-threshold: high
                docker-image-name: << parameters.docker-image-name >>:<< parameters.version >>
                fail-on-issues: false
                project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-container'
        
jobs:
    build: # runs not using Workflows must have a `build` job as entry point
        working_directory: ~/goof # directory where steps will run
        docker: # run the steps with Docker
          - image: circleci/node # ...with this image as the primary container; this is where all `steps` will run
        steps: # a collection of executable commands
          #- checkout # special step to check out source code to working directory
          #- run:
          #    name: update-npm
          #    command: 'sudo npm install -g npm@latest'
          - run:
              name: install-snyk
              command: 'sudo npm install -g snyk'     
          - run: # run snyk help - test snyk is installed and working
              name: snyk-help
              command: snyk --help
          - run: # run snyk auth - authenticate snyk use environment variables to add token
              name: snyk auth
              command: snyk auth $SNYK_TOKEN
          - run: # run snyk test - run snyk test
              name: snyk test
              command: |
                snyk container test graviteeio/apim-management-api:3-ee
                snyk container monitor graviteeio/apim-management-api:3-ee

    publish_prod_docker_images:
        parameters:
            dry_run:
              type: boolean
              default: true
            enterprise_edition:
                default: false
                type: boolean
            graviteeio_version:
                default: "3.15-ee"
                type: string              
        docker:
            - image: cimg/base:stable
        steps:
            - when:
                  condition:
                      equal: [false, << parameters.dry_run >>]
                  steps:
                      - docker-scan:
                            docker-image-name: graviteeio/apim-management-api
                            version: << parameters.graviteeio_version >><<# parameters.enterprise_edition >>-ee<</ parameters.enterprise_edition >>
                            #echo << parameters.version >>

workflows:
    pull_requests:
        jobs:
            - build
            - publish_prod_docker_images:
                 dry_run: false
                 graviteeio_version: "3"
                 enterprise_edition: true
           
